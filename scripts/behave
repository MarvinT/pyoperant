#!/usr/bin/env python

import sys, os
import argparse
import importlib
try: import simplejson as json
except ImportError: import json


def parse_commandline(arg_str=sys.argv[1:]):
    """ parse command line arguments

    """
    parser = argparse.ArgumentParser()
    parser.add_argument('protocol',
                        action='store',
                        type=str,
                        help='(str) experiment protocol'
                        )
    parser.add_argument('-P', '--panel',
                        action='store',
                        type=str,
                        dest='panel',
                        required=True,
                        help='(string) panel identifier'
                        )
    parser.add_argument('-S', '--subject',
                        action='store',
                        type=str,
                        dest='subject',
                        required=True,
                        help='subject identifier'
                        )
    parser.add_argument('-c','--config',
                        action='store',
                        type=str,
                        dest='config_file',
                        default='config.json',
                        required=False,
                        help='configuration file [default: %(default)s]'
                        )
    args = parser.parse_args(arg_str)
    return vars(args)

def find_protocol(protocol,package_list):
    packages = []
    for pstr in package_list:
        p = importlib.import_module(pstr)

        try:
            Protocol = getattr(p, protocol)
            return Protocol
        except AttributeError:
            continue
    raise ImportError('%s not found' % protocol)


def main():
    from pyoperant.local import PANELS

    try:
        from pyoperant.local import BEHAVIORS
    except ImportError:
        BEHAVIORS = ['pyoperant.behavior']

    try:
        from pyoperant.local import DATAPATH
    except ImportError:
        DATAPATH = '/home/bird/opdat'

    cmd_line = parse_commandline()

    experiment_path = os.path.join(DATAPATH,cmd_line['subject'])
    config_file = os.path.join(experiment_path,cmd_line['config_file'])
    stimuli_path = os.path.join(experiment_path,'Stimuli')

    with open(config_file, 'rb') as config:
        parameters = json.load(config)

    BehaviorProtocol = find_protocol(cmd_line['protocol'],BEHAVIORS)

    if parameters['debug']:
        print parameters
        print PANELS

    behavior = BehaviorProtocol(
        panel=PANELS[cmd_line['panel']](),
        subject=cmd_line['subject'],
        panel_name=cmd_line['panel'],
        experiment_path=experiment_path,
        stim_path=stimuli_path,
        **parameters
        )

    behavior.run()

if __name__ == "__main__":
    main()
